.include "macro.inc"

/* assembler directives */
.set noat      /* allow manual use of $at */
.set noreorder /* don't insert nops after branches */
.set gp=64     /* allow use of 64-bit general purpose registers */

.section .text, "ax"

/* Generated by spimdisasm 1.30.0 */

/* Handwritten function */
leaf osInvalICache
/* D52B0 800D46B0 18A00011 */  blez       $a1, .L800D46F8
/* D52B4 800D46B4 00000000 */   nop
/* D52B8 800D46B8 240B4000 */  addiu      $t3, $zero, 0x4000
/* D52BC 800D46BC 00AB082B */  sltu       $at, $a1, $t3
/* D52C0 800D46C0 1020000F */  beqz       $at, .L800D4700
/* D52C4 800D46C4 00000000 */   nop
/* D52C8 800D46C8 00804025 */  or         $t0, $a0, $zero
/* D52CC 800D46CC 00854821 */  addu       $t1, $a0, $a1
/* D52D0 800D46D0 0109082B */  sltu       $at, $t0, $t1
/* D52D4 800D46D4 10200008 */  beqz       $at, .L800D46F8
/* D52D8 800D46D8 00000000 */   nop
/* D52DC 800D46DC 310A001F */  andi       $t2, $t0, 0x1F
/* D52E0 800D46E0 2529FFE0 */  addiu      $t1, $t1, -0x20
/* D52E4 800D46E4 010A4023 */  subu       $t0, $t0, $t2
.L800D46E8:
/* D52E8 800D46E8 BD100000 */  cache      0x10, 0x0($t0) /* handwritten instruction */
/* D52EC 800D46EC 0109082B */  sltu       $at, $t0, $t1
/* D52F0 800D46F0 1420FFFD */  bnez       $at, .L800D46E8
/* D52F4 800D46F4 25080020 */   addiu     $t0, $t0, 0x20
.L800D46F8:
/* D52F8 800D46F8 03E00008 */  jr         $ra
/* D52FC 800D46FC 00000000 */   nop
.L800D4700:
/* D5300 800D4700 3C088000 */  lui        $t0, 0x8000
/* D5304 800D4704 010B4821 */  addu       $t1, $t0, $t3
/* D5308 800D4708 2529FFE0 */  addiu      $t1, $t1, -0x20
.L800D470C:
/* D530C 800D470C BD000000 */  cache      0x00, 0x0($t0) /* handwritten instruction */
/* D5310 800D4710 0109082B */  sltu       $at, $t0, $t1
/* D5314 800D4714 1420FFFD */  bnez       $at, .L800D470C
/* D5318 800D4718 25080020 */   addiu     $t0, $t0, (0x80000020 & 0xFFFF)
/* D531C 800D471C 03E00008 */  jr         $ra
/* D5320 800D4720 00000000 */   nop
.end osInvalICache
