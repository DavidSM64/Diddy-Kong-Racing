#ifndef ENUMS_H
#define ENUMS_H

#include "sound_ids.h"
#include "sequence_ids.h"

/* All the enums defined here can be used in asset files */

typedef enum Vehicle {
    VEHICLE_CAR,
    VEHICLE_HOVERCRAFT,
    VEHICLE_PLANE,

    NUMBER_OF_VEHICLE_TYPES
} Vehicle;

typedef enum CameraMode {
    CAMERA_CAR,
    CAMERA_PLANE,
    CAMERA_UNUSED,
    CAMERA_FIXED,
    CAMERA_HOVERCRAFT,
    CAMERA_FINISH_CHALLENGE,
    CAMERA_LOOP,
    CAMERA_FINISH_RACE
} CameraMode;

typedef enum Language {
    LANGUAGE_ENGLISH,
    LANGUAGE_GERMAN,
    LANGUAGE_FRENCH,
    LANGUAGE_JAPANESE
} Language;

typedef enum World {
    WORLD_NONE = -1, // This enum starts at -1 instead of 0.
    WORLD_CENTRAL_AREA,
    WORLD_DINO_DOMAIN,
    WORLD_SHERBET_ISLAND,
    WORLD_SNOWFLAKE_MOUNTAIN,
    WORLD_DRAGON_FOREST,
    WORLD_FUTURE_FUN_LAND
} World;

typedef enum RaceType {
    RACETYPE_DEFAULT           =  0,
    RACETYPE_HORSESHOE_GULCH   =  3,
    RACETYPE_HUBWORLD          =  5,
    RACETYPE_CUTSCENE_1        =  6, // Not sure what the difference between these two are.
    RACETYPE_CUTSCENE_2        =  7,
    RACETYPE_BOSS              =  8,
    RACETYPE_CHALLENGE         = 64, // For masking
    RACETYPE_CHALLENGE_BATTLE  = 64,
    RACETYPE_CHALLENGE_BANANAS = 65,
    RACETYPE_CHALLENGE_EGGS    = 66
} RaceType;

typedef enum HorizontalAlignmentFlags {
    HORZ_ALIGN_LEFT   = 0,
    HORZ_ALIGN_RIGHT  = 1,
    HORZ_ALIGN_CENTER = 4
} HorizontalAlignmentFlags;

typedef enum VerticalAlignmentFlags {
    VERT_ALIGN_TOP    = 0,
    VERT_ALIGN_BOTTOM = 2,
    VERT_ALIGN_MIDDLE = 8
} VerticalAlignmentFlags;

typedef enum AlignmentFlags {
    ALIGN_TOP_LEFT      = VERT_ALIGN_TOP    | HORZ_ALIGN_LEFT,
    ALIGN_TOP_CENTER    = VERT_ALIGN_TOP    | HORZ_ALIGN_CENTER,
    ALIGN_TOP_RIGHT     = VERT_ALIGN_TOP    | HORZ_ALIGN_RIGHT,
    ALIGN_MIDDLE_LEFT   = VERT_ALIGN_MIDDLE | HORZ_ALIGN_LEFT,
    ALIGN_MIDDLE_CENTER = VERT_ALIGN_MIDDLE | HORZ_ALIGN_CENTER,
    ALIGN_MIDDLE_RIGHT  = VERT_ALIGN_MIDDLE | HORZ_ALIGN_RIGHT,
    ALIGN_BOTTOM_LEFT   = VERT_ALIGN_BOTTOM | HORZ_ALIGN_LEFT,
    ALIGN_BOTTOM_CENTER = VERT_ALIGN_BOTTOM | HORZ_ALIGN_CENTER,
    ALIGN_BOTTOM_RIGHT  = VERT_ALIGN_BOTTOM | HORZ_ALIGN_RIGHT
} AlignmentFlags;

typedef enum MiscAsset {
    MISC_UNK00,
    MISC_UNK01,
    MISC_UNK02,
    MISC_UNK03,
    MISC_UNK04,
    MISC_UNK05,
    MISC_UNK06,
    MISC_UNK07,
    MISC_UNK08,
    MISC_RACER_WEIGHT,
    MISC_RACER_HANDLING,
    MISC_UNK0B,
    MISC_UNK0C,
    MISC_UNK0D,
    MISC_UNK0E,
    MISC_UNK0F,
    MISC_UNK10,
    MISC_UNK11,
    MISC_UNK12,
    MISC_UNK13,
    MISC_UNK14,
    MISC_UNK15,
    MISC_UNK16,
    MISC_UNK17,
    MISC_UNK18,
    MISC_UNK19,
    MISC_UNK1A,
    MISC_UNK1B,
    MISC_UNK1C,
    MISC_UNK1D,
    MISC_UNK1E,
    MISC_UNK1F,
    MISC_UNK20,
    MISC_UNK21,
    MISC_UNK22,
    MISC_UNK23,
    MISC_UNK24,
    MISC_UNK25,
    MISC_UNK26,
    MISC_UNK27,
    MISC_UNK28,
    MISC_UNK29,
    MISC_UNK2A,
    MISC_UNK2B,
    MISC_UNK2C,
    MISC_UNK2D,
    MISC_UNK2E,
    MISC_UNK2F,
    MISC_UNK30,
    MISC_UNK31,
    MISC_UNK32,
    MISC_UNK33,
    MISC_UNK34,
    MISC_UNK35,
    MISC_UNK36,
    MISC_UNK37,
    MISC_UNK38,
    MISC_UNK39,
    MISC_UNK3A,
    MISC_UNK3B,
    MISC_UNK3C,
    MISC_UNK3D,
    MISC_UNK3E,
    MISC_UNK3F,
    MISC_UNK40,
    MISC_UNK41,
    MISC_UNK42,
    MISC_UNK43,
    MISC_UNK44,
    MISC_UNK45,
    MISC_UNK46,
    MISC_UNK47,
    MISC_UNK48,
    MISC_UNK49,
    MISC_UNK4A,
    MISC_UNK4B,
    MISC_UNK4C
} MiscAsset;

typedef enum SurfaceType {
    SURFACE_DEFAULT,
    SURFACE_GRASS,
    SURFACE_SAND,
    SURFACE_UNK3,
    SURFACE_STONE,
    SURFACE_UNK5,
    SURFACE_UNK6,
    SURFACE_UNK7,
    SURFACE_UNK8,
    SURFACE_UNK9,
    SURFACE_FROZEN_WATER,
    SURFACE_UNK11,
    SURFACE_TAJ_PAD,
    SURFACE_SNOW,
    SURFACE_UNK14,
    SURFACE_UNK15,
    SURFACE_UNK16,
    SURFACE_INVIS_WALL,
    SURFACE_UNK18,

    SURFACE_NONE = 255
} SurfaceType;

#endif
